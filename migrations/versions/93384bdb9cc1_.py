"""Create user table and create one to many relation from user to expenses

Revision ID: 93384bdb9cc1
Revises: 8ddb10e522fc
Create Date: 2024-04-24 03:12:18.892655

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "93384bdb9cc1"
down_revision = "8ddb10e522fc"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user")),
    )
    with op.batch_alter_table("expense", schema=None) as batch_op:
        batch_op.add_column(sa.Column("user_id", sa.Integer(), nullable=False))
        batch_op.create_foreign_key(
            batch_op.f("fk_expense_user_id_user"), "user", ["user_id"], ["id"]
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("expense", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_expense_user_id_user"), type_="foreignkey"
        )
        batch_op.drop_column("user_id")

    op.drop_table("user")
    # ### end Alembic commands ###
